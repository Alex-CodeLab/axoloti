CCFLAGS = -nostdlib -fno-exceptions -fno-rtti -mcpu=cortex-m4 -O3 -fomit-frame-pointer -falign-functions=16 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -Wunused-parameter -DCORTEX_USE_FPU=TRUE -DTHUMB_PRESENT -mno-thumb-interwork -DTHUMB_NO_INTERWORKING -mthumb -DTHUMB -std=c++11 -DARM_MATH_CM4 -D__FPU_PRESENT -fno-math-errno -fno-threadsafe-statics -fno-use-cxa-atexit -Wno-unused-parameter
LDFLAGS = -nostartfiles -Tramlink.ld -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mthumb  -mno-thumb-interwork

#-mcpu=cortex-m4   
#-mno-thumb-interwork 
#-mthumb
#-Wl,-Map=build/ch.map,--cref,--no-warn-mismatch,--gc-sections 
 
CC=arm-none-eabi-gcc
CPP=arm-none-eabi-g++
LD=arm-none-eabi-gcc
CP=arm-none-eabi-objcopy
DMP=arm-none-eabi-objdump
AR=arm-none-eabi-ar
NM=arm-none-eabi-nm
AWK=awk
LCPP=g++

axoloti_runtime ?= ..
axoloti_release ?= ..
axoloti_home ?= ..
axoloti_firmware ?= ../firmware


CHIBIOS = ${axoloti_release}/chibios
CMSIS = ${axoloti_release}/CMSIS

SPACE := 
SPACE += 
BDIR=$(subst $(SPACE),\ ,${axoloti_home}/build)
# theoretically should be this...., but CSRC expansion cannot cope with escape spaces
#FIRMWARE=$(subst $(SPACE),\ ,${axoloti_firmware})
FIRMWARE=.

$(info BDIR = ${BDIR})
$(info FIRMWARE = ${FIRMWARE})

include $(CHIBIOS)/boards/ST_STM32F4_DISCOVERY/board.mk
include $(CHIBIOS)/os/hal/platforms/STM32F4xx/platform.mk
include $(CHIBIOS)/os/hal/hal.mk
include $(CHIBIOS)/os/ports/GCC/ARMCMx/STM32F4xx/port.mk
include $(CHIBIOS)/os/kernel/kernel.mk
include $(CHIBIOS)/os/various/fatfs_bindings/fatfs.mk

INCDIR = $(CMSIS)/Include $(CMSIS)/DSP_Lib/Include \
         $(PORTINC) $(KERNINC) $(TESTINC) \
         $(HALINC) $(PLATFORMINC) $(BOARDINC) $(FATFSINC) \
         ${FIRMWARE} $(CHIBIOS)

# Paths
IINCDIR   = $(patsubst %,-I%,$(INCDIR) $(DINCDIR) $(UINCDIR))
LLIBDIR   = $(patsubst %,-L%,$(DLIBDIR) $(ULIBDIR))
 

# above from Makefile.patch, we can possible remove/and make common after tests


$(info building module ${MODULE})

include ../modules/$(MODULE)/Makefile

BUILDDIR := ${BDIR}/modules/${MODULE}
MODLIB := lib${MODULE}.a
MODDIR := ../modules/${MODULE}
MODOBJS := $(addprefix $(BUILDDIR)/, $(MOD_OBJS))  

$(BUILDDIR)/%.o: $(MODDIR)/%.cpp ${BDIR}/xpatch.h.gch
	echo @mkdir -p ${BDIR}/build/$(dir $<)
	@mkdir -p ${BDIR}/build/$(dir $<)
	@$(CPP) $(CCFLAGS) -H $(IINCDIR) -I ${MODDIR} -Winvalid-pch  --include ${BDIR}/xpatch.h -c  $< -o $@
	#@$(CPP) $(CCFLAGS) -H $(IINCDIR) -I ${MODDIR} -Winvalid-pch -MD -MP --include ${BDIR}/xpatch.h -c  $< -o $@

${BUILDDIR}/${MODLIB}: $(MODOBJS)
	@$(AR) rcs ${BUILDDIR}/${MODLIB} $(MODOBJS)
	@$(NM) -g ${BUILDDIR}/${MODLIB} > ${BUILDDIR}/defines.sym
	@$(BDIR)/createSym "${MODULE}" ${BUILDDIR}/defines.sym  ${BUILDDIR}/redefines.sym
	@$(CP) --redefine-syms ${BUILDDIR}/redefines.sym ${BUILDDIR}/${MODLIB} ${BUILDDIR}/${MODLIB}

${BDIR}/xpatch.h.gch: ${FIRMWARE}/xpatch.h ${FIRMWARE}/patch.h ${FIRMWARE}/axoloti.h ${FIRMWARE}/parameter_functions.h ${FIRMWARE}/axoloti_math.h ${FIRMWARE}/axoloti_filters.h
	@echo "Build precompiled header"
	$(CPP) $(CCFLAGS) $(IINCDIR) -Winvalid-pch -MD -MP -c ${FIRMWARE}/xpatch.h  -o ${BDIR}/xpatch.h.gch

$(BDIR)/createSym: ../tools/createSym/createSym.cpp
	@$(LCPP) ../tools/createSym/createSym.cpp -o $(BDIR)/createSym
	
all: $(BDIR)/createSym ${BUILDDIR}/${MODLIB} ${BDIR}/xpatch.h.gch 
