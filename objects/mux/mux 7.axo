<objdefs>
   <obj.normal id="mux 7" sha="bd4aefe94e119bad8b053eac6f2b41080f1661ef">
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32 name="i0" description="input 0"/>
         <frac32 name="i1" description="input 1"/>
         <frac32 name="i2" description="input 2"/>
         <frac32 name="i3" description="input 3"/>
         <frac32 name="i4" description="input 4"/>
         <frac32 name="i5" description="input 5"/>
         <frac32 name="i6" description="input 6"/>
         <int32 class="axoloti.inlets.InletInt32Pos" name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      case 6: outlet_o= inlet_i6;break;
      default: outlet_o= inlet_i6;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 7" sha="7e29c91f62cef7aaece82f44b32482281e62a7e3">
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <int32 name="i0" description="input 0"/>
         <int32 name="i1" description="input 1"/>
         <int32 name="i2" description="input 2"/>
         <int32 name="i3" description="input 3"/>
         <int32 name="i4" description="input 4"/>
         <int32 name="i5" description="input 5"/>
         <int32 name="i6" description="input 6"/>
         <int32 class="axoloti.inlets.InletInt32Pos" name="s" description="select"/>
      </inlets>
      <outlets>
         <int32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      case 6: outlet_o= inlet_i6;break;
      default: outlet_o= inlet_i6;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 7" sha="6f39b94067a962620fe870a132b5c564494e39a8">
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="i0" description="input 0"/>
         <frac32buffer name="i1" description="input 1"/>
         <frac32buffer name="i2" description="input 2"/>
         <frac32buffer name="i3" description="input 3"/>
         <frac32buffer name="i4" description="input 4"/>
         <frac32buffer name="i5" description="input 5"/>
         <frac32buffer name="i6" description="input 6"/>
         <int32 class="axoloti.inlets.InletInt32Pos" name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32buffer name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.srate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o[buffer_index]= inlet_i0[buffer_index];break;
      case 1: outlet_o[buffer_index]= inlet_i1[buffer_index];break;
      case 2: outlet_o[buffer_index]= inlet_i2[buffer_index];break;
      case 3: outlet_o[buffer_index]= inlet_i3[buffer_index];break;
      case 4: outlet_o[buffer_index]= inlet_i4[buffer_index];break;
      case 5: outlet_o[buffer_index]= inlet_i5[buffer_index];break;
      case 6: outlet_o[buffer_index]= inlet_i6[buffer_index];break;
      default: outlet_o[buffer_index]= inlet_i6[buffer_index];break;
}
]]></code.srate>
   </obj.normal>
   <obj.normal id="mux 7" sha="56284c9ff917ecfa3e9228d020a19f2cc888b2d8">
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <bool32 name="i0" description="input 0"/>
         <bool32 name="i1" description="input 1"/>
         <bool32 name="i2" description="input 2"/>
         <bool32 name="i3" description="input 3"/>
         <bool32 name="i4" description="input 4"/>
         <bool32 name="i5" description="input 5"/>
         <bool32 name="i6" description="input 6"/>
         <int32 class="axoloti.inlets.InletInt32Pos" name="s" description="select"/>
      </inlets>
      <outlets>
         <bool32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      case 6: outlet_o= inlet_i6;break;
      default: outlet_o= inlet_i6;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 7" sha="8b3bbebde371985d03e1df90f8d9a56c61df50be">
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <charptr32 name="i0" description="input 0"/>
         <charptr32 name="i1" description="input 1"/>
         <charptr32 name="i2" description="input 2"/>
         <charptr32 name="i3" description="input 3"/>
         <charptr32 name="i4" description="input 4"/>
         <charptr32 name="i5" description="input 5"/>
         <charptr32 name="i6" description="input 6"/>
         <int32 class="axoloti.inlets.InletInt32Pos" name="s" description="select"/>
      </inlets>
      <outlets>
         <charptr32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      case 6: outlet_o= inlet_i6;break;
      default: outlet_o= inlet_i6;break;
}
]]></code.krate>
   </obj.normal>
</objdefs>