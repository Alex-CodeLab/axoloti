<objdefs>
   <obj.normal id="mux 6" uuid="e54342867d40d28eb091a3bfe46df6a643ac5dc0" sha="138ac377aaeca8beeac6f743eb4fe36c9eb39f08">
      <upgradeSha>88fc4871dff7243f4739fa81f1177d6eda2f3101</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32 name="i0" description="input 0"/>
         <frac32 name="i1" description="input 1"/>
         <frac32 name="i2" description="input 2"/>
         <frac32 name="i3" description="input 3"/>
         <frac32 name="i4" description="input 4"/>
         <frac32 name="i5" description="input 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      default: outlet_o= inlet_i5;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 6" uuid="b7313a3f381ed9aa5e847f2fbd5198c675a22569" sha="2c3565c39e2262900879e78d451aabc3fae5e5dc">
      <upgradeSha>2f48db275e7e6b82946ed41c1aadcb21f6e6a930</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <int32 name="i0" description="input 0"/>
         <int32 name="i1" description="input 1"/>
         <int32 name="i2" description="input 2"/>
         <int32 name="i3" description="input 3"/>
         <int32 name="i4" description="input 4"/>
         <int32 name="i5" description="input 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <int32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      default: outlet_o= inlet_i5;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 6" uuid="18449fceb9ebd20cc0403bc2bf593dc5e5eafbba" sha="53f11125ad9e1fc9a624b1014033bc67216271a1">
      <upgradeSha>b2b6f0d11acf8802992a0a4323f5d0aafa89ed93</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="i0" description="input 0"/>
         <frac32buffer name="i1" description="input 1"/>
         <frac32buffer name="i2" description="input 2"/>
         <frac32buffer name="i3" description="input 3"/>
         <frac32buffer name="i4" description="input 4"/>
         <frac32buffer name="i5" description="input 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32buffer name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.srate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o[buffer_index]= inlet_i0[buffer_index];break;
      case 1: outlet_o[buffer_index]= inlet_i1[buffer_index];break;
      case 2: outlet_o[buffer_index]= inlet_i2[buffer_index];break;
      case 3: outlet_o[buffer_index]= inlet_i3[buffer_index];break;
      case 4: outlet_o[buffer_index]= inlet_i4[buffer_index];break;
      case 5: outlet_o[buffer_index]= inlet_i5[buffer_index];break;
      default: outlet_o[buffer_index]= inlet_i5[buffer_index];break;
}
]]></code.srate>
   </obj.normal>
   <obj.normal id="mux 6" uuid="25fcf29e8b765f821a8982b52a0c8bc36ecbcc3f" sha="900983b187dddfd9de4b64a441199df8683e016d">
      <upgradeSha>b11f3c83f69df15547d0db26a8eb17d6f90a48f4</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <bool32 name="i0" description="input 0"/>
         <bool32 name="i1" description="input 1"/>
         <bool32 name="i2" description="input 2"/>
         <bool32 name="i3" description="input 3"/>
         <bool32 name="i4" description="input 4"/>
         <bool32 name="i5" description="input 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <bool32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      default: outlet_o= inlet_i5;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 6" uuid="9d0798675f4f81b90fd250a0160abc13f824604d" sha="a6121c54ae09f017bddd2f29acd1a0a55d94dd47">
      <upgradeSha>7da2c7cc7f06a10ed733e6eb0240405617ce4f20</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <charptr32 name="i0" description="input 0"/>
         <charptr32 name="i1" description="input 1"/>
         <charptr32 name="i2" description="input 2"/>
         <charptr32 name="i3" description="input 3"/>
         <charptr32 name="i4" description="input 4"/>
         <charptr32 name="i5" description="input 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <charptr32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      default: outlet_o= inlet_i5;break;
}
]]></code.krate>
   </obj.normal>
</objdefs>