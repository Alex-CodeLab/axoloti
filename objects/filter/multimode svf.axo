<objdefs>
   <obj.normal id="multimode svf" uuid="9498a7be114b6a6852dd7ce5aed72b12122f6f68" sha="4f4ecccaa03fab38f923d856cd564ea06ee38b03">
      <upgradeSha>2ed0aec6d5bf2f365d3afaf8ea665f3c1ebe9e30</upgradeSha>
      <sDescription>multimode filter, state-variable type</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>filter.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="filter input"/>
      </inlets>
      <outlets>
         <frac32buffer name="hp" description="highpass filter output"/>
         <frac32buffer name="bp" description="bandpass filter output"/>
         <frac32buffer name="lp" description="lowpass filter output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch"/>
         <frac32.u.map.filterq name="reso"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t low;
int32_t band;
]]></code.declaration>
      <code.init><![CDATA[low = 0;
band = 0;
]]></code.init>
      <code.krate><![CDATA[int32_t damp = (0x80<<24) - (param_reso<<4);
damp = ___SMMUL(damp,damp);
int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch,alpha);
SINE2TINTERP(alpha,freq);
]]></code.krate>
      <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = inlet_in - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band = (___SMMUL(freq,high)<<1) + band;// - drive*band*band*band;
int32_t out1 = band;
%out% = out1;
]]></code.srate>
   </obj.normal>
</objdefs>