<objdefs>
   <obj.normal id="ahd lin m x" sha="62a6c82f56f3c5daa5fb4f269acb3a33cf34992b">
      <sDescription>attack/hold/decay envelope, linear ramps, modulation inputs, extended range</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <bool32.risingfalling name="trig" description="trigger"/>
         <frac32.bipolar name="am" description="attack time modulation"/>
         <frac32.bipolar name="dm" description="decay time modulation"/>
      </inlets>
      <outlets>
         <frac32.positive name="env" description="envelope output" SumBuffer="false"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.klineartime.exp name="a">
            <MinValue v="-64.0"/>
            <MaxValue v="63.5"/>
         </frac32.s.map.klineartime.exp>
         <frac32.s.map.klineartime.exp name="d">
            <MinValue v="-64.0"/>
            <MaxValue v="63.5"/>
         </frac32.s.map.klineartime.exp>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t val;
]]></code.declaration>
      <code.init><![CDATA[val = 0;
]]></code.init>
      <code.krate><![CDATA[if (%trig% > 0) {
  int32_t t;
  int32_t at = %a% + %am%;
  MTOF(-at,t);
  val += t>>6;
}
else {
  int32_t t;
  int32_t dt = %d% + %dm%;
  MTOF(-dt,t);
  val -= t>>6;
}
val = __USAT(val,27);
%env% = val;
]]></code.krate>
   </obj.normal>
</objdefs>