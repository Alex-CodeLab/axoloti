<objdefs>
   <obj.normal id="line 3" uuid="bee06f6ce3943a5ecfaf1efc140a1c2a7b802e7" sha="e9ddab08bf30afad52756390c6189346b9680dcc">
      <upgradeSha>e6cbf938b711e442cc85489d0dcc7fdfd8ea3584</upgradeSha>
      <sDescription>Three piecewise linear ramps</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <bool32.rising name="trig" description="trigger"/>
      </inlets>
      <outlets>
         <frac32.positive name="out" description="output"/>
         <int32.positive name="phase" description="phase index"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="v0">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map.klineartime.reverse name="tA">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map.klineartime.reverse>
         <frac32.u.map name="v1">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map.klineartime.reverse name="tB">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map.klineartime.reverse>
         <frac32.u.map name="v2">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map.klineartime.reverse name="tC">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map.klineartime.reverse>
         <frac32.u.map name="v3">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t val;
int32_t time1;
int32_t phase1;
int32_t ntrig;
]]></code.declaration>
      <code.init><![CDATA[phase1 = 0;
val = %v3%;
ntrig = 0;
]]></code.init>
      <code.krate><![CDATA[if ((inlet_trig > 0) && (!ntrig)) {
  time1 = 0;
  phase1 = 1;
  val = param_v0;
  ntrig = 1;
}
else if (phase1 == 1) {
  time1 += param_tA>>3;
  if (time1>=0)
     val = param_v0 + (___SMMUL(param_v1-param_v0,time1)<<1);
  else {
    phase1 = 2;
    val = param_v1;
    time1 = 0;
  }
}
else if (phase1 == 2) {
  time1 += param_tB>>3;
  if (time1>=0)
     val = param_v1 + (___SMMUL(param_v2-param_v1,time1)<<1);
  else {
    phase1 = 3;
    val = param_v2;
    time1 = 0;
  }
}
else if (phase1 == 3) {
  time1 += param_tC>>3;
  if (time1>=0)
     val = param_v2 + (___SMMUL(param_v3-param_v2,time1)<<1);
  else {
    phase1 = 0;
    val = param_v3;
  }
}
if (!(inlet_trig > 0)) ntrig = 0;
outlet_out = val;
outlet_phase = phase1;
]]></code.krate>
   </obj.normal>
</objdefs>