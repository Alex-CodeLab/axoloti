<objdefs>
   <obj.normal id="demux 3" uuid="88f16aac0672db6793f5662990ecbc9bb0a990d7" sha="d9cceb4e9046257d27b4d05467f9e7da85d6dc11">
      <upgradeSha>7dd4924b110392a51e183ca56de9badd8f051e96</upgradeSha>
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <frac32 name="i" description="input"/>
         <frac32 name="d0" description="default 0"/>
         <frac32 name="d1" description="default 1"/>
         <frac32 name="d2" description="default 2"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32 name="o0" description="output 0"/>
         <frac32 name="o1" description="output 1"/>
         <frac32 name="o2" description="output 2"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="demux 3" uuid="dd0bf6cf5b56903e4e5e8c62dfdb9d137a01aff6" sha="d114fca38989bce4b64da4d8384ecc4e72063b55">
      <upgradeSha>ff3e2fe58a7827567c4bb577e440af6d839ff80d</upgradeSha>
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <int32 name="i" description="input"/>
         <int32 name="d0" description="default 0"/>
         <int32 name="d1" description="default 1"/>
         <int32 name="d2" description="default 2"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <int32 name="o0" description="output 0"/>
         <int32 name="o1" description="output 1"/>
         <int32 name="o2" description="output 2"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="demux 3" uuid="62944dc7185bd8e4fe52ad83e452cc77e12bbd5" sha="aa55a7db90dd77cb420f706902a39d92b1b1008a">
      <upgradeSha>129c7ffdc1dc207405715ead5330b62739fe0b56</upgradeSha>
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <frac32buffer name="i" description="input"/>
         <frac32buffer name="d0" description="default 0"/>
         <frac32buffer name="d1" description="default 1"/>
         <frac32buffer name="d2" description="default 2"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32buffer name="o0" description="output 0"/>
         <frac32buffer name="o1" description="output 1"/>
         <frac32buffer name="o2" description="output 2"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.srate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0[buffer_index] = inlet_i[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         break;
      case 1: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_i[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         break;
      case 2: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_i[buffer_index];
         break;
      default:
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
}
]]></code.srate>
   </obj.normal>
   <obj.normal id="demux 3" uuid="435caae43e187ddec687cef66d6fd4c175c8407b" sha="82d3f934e601cd04fa417a247ac4fddb6d3fcd96">
      <upgradeSha>e1328a696346136f1a4a3c7c3b71856e971c9caa</upgradeSha>
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <bool32 name="i" description="input"/>
         <bool32 name="d0" description="default 0"/>
         <bool32 name="d1" description="default 1"/>
         <bool32 name="d2" description="default 2"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <bool32 name="o0" description="output 0"/>
         <bool32 name="o1" description="output 1"/>
         <bool32 name="o2" description="output 2"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
}
]]></code.krate>
   </obj.normal>
</objdefs>