<objdefs>
   <obj.normal id="demux 6" uuid="330e075234fdb3420a5fa459fd1cb5bf753c1543" sha="1cfce3391269a8d8bdfd752619d4bce778538c82">
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <frac32 name="i" description="input"/>
         <frac32 name="d0" description="default 0"/>
         <frac32 name="d1" description="default 1"/>
         <frac32 name="d2" description="default 2"/>
         <frac32 name="d3" description="default 3"/>
         <frac32 name="d4" description="default 4"/>
         <frac32 name="d5" description="default 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32 name="o0" description="output 0"/>
         <frac32 name="o1" description="output 1"/>
         <frac32 name="o2" description="output 2"/>
         <frac32 name="o3" description="output 3"/>
         <frac32 name="o4" description="output 4"/>
         <frac32 name="o5" description="output 5"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 3: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_i;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 4: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_i;
         outlet_o5 = inlet_d5;
         break;
      case 5: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="demux 6" uuid="382079e561c24190b5285343b14fb2c24dc8698d" sha="753569248056d05cab68fb61cabbe55897984e6">
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <int32 name="i" description="input"/>
         <int32 name="d0" description="default 0"/>
         <int32 name="d1" description="default 1"/>
         <int32 name="d2" description="default 2"/>
         <int32 name="d3" description="default 3"/>
         <int32 name="d4" description="default 4"/>
         <int32 name="d5" description="default 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <int32 name="o0" description="output 0"/>
         <int32 name="o1" description="output 1"/>
         <int32 name="o2" description="output 2"/>
         <int32 name="o3" description="output 3"/>
         <int32 name="o4" description="output 4"/>
         <int32 name="o5" description="output 5"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 3: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_i;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 4: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_i;
         outlet_o5 = inlet_d5;
         break;
      case 5: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="demux 6" uuid="3bca255c7dd50b84504f6fb55b8f682e3a5b123e" sha="92207c0aae020018a636a519eda04cf89338456c">
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <frac32buffer name="i" description="input"/>
         <frac32buffer name="d0" description="default 0"/>
         <frac32buffer name="d1" description="default 1"/>
         <frac32buffer name="d2" description="default 2"/>
         <frac32buffer name="d3" description="default 3"/>
         <frac32buffer name="d4" description="default 4"/>
         <frac32buffer name="d5" description="default 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32buffer name="o0" description="output 0"/>
         <frac32buffer name="o1" description="output 1"/>
         <frac32buffer name="o2" description="output 2"/>
         <frac32buffer name="o3" description="output 3"/>
         <frac32buffer name="o4" description="output 4"/>
         <frac32buffer name="o5" description="output 5"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.srate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0[buffer_index] = inlet_i[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         break;
      case 1: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_i[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         break;
      case 2: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_i[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         break;
      case 3: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_i[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         break;
      case 4: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_i[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         break;
      case 5: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_i[buffer_index];
         break;
      default:
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
}
]]></code.srate>
   </obj.normal>
   <obj.normal id="demux 6" uuid="512939979eae568b92059592184ad8be7d0b169d" sha="1fa6623ce71de2739aa1aa28ba64f03f1a37601b">
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <bool32 name="i" description="input"/>
         <bool32 name="d0" description="default 0"/>
         <bool32 name="d1" description="default 1"/>
         <bool32 name="d2" description="default 2"/>
         <bool32 name="d3" description="default 3"/>
         <bool32 name="d4" description="default 4"/>
         <bool32 name="d5" description="default 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <bool32 name="o0" description="output 0"/>
         <bool32 name="o1" description="output 1"/>
         <bool32 name="o2" description="output 2"/>
         <bool32 name="o3" description="output 3"/>
         <bool32 name="o4" description="output 4"/>
         <bool32 name="o5" description="output 5"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 3: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_i;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 4: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_i;
         outlet_o5 = inlet_d5;
         break;
      case 5: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
}
]]></code.krate>
   </obj.normal>
</objdefs>