<objdefs>
   <obj.normal id="demux 7" sha="e8d731ad8fb3fb4c3be6a0d64818016baa2e6596">
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <frac32 name="i" description="input"/>
         <frac32 name="d0" description="default 0"/>
         <frac32 name="d1" description="default 1"/>
         <frac32 name="d2" description="default 2"/>
         <frac32 name="d3" description="default 3"/>
         <frac32 name="d4" description="default 4"/>
         <frac32 name="d5" description="default 5"/>
         <frac32 name="d6" description="default 6"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32 name="o0" description="output 0"/>
         <frac32 name="o1" description="output 1"/>
         <frac32 name="o2" description="output 2"/>
         <frac32 name="o3" description="output 3"/>
         <frac32 name="o4" description="output 4"/>
         <frac32 name="o5" description="output 5"/>
         <frac32 name="o6" description="output 6"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 3: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_i;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 4: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_i;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 5: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_i;
         outlet_o6 = inlet_d6;
         break;
      case 6: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="demux 7" sha="fd70da63362738f7ce0ee5114ef951c0168fc54b">
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <int32 name="i" description="input"/>
         <int32 name="d0" description="default 0"/>
         <int32 name="d1" description="default 1"/>
         <int32 name="d2" description="default 2"/>
         <int32 name="d3" description="default 3"/>
         <int32 name="d4" description="default 4"/>
         <int32 name="d5" description="default 5"/>
         <int32 name="d6" description="default 6"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <int32 name="o0" description="output 0"/>
         <int32 name="o1" description="output 1"/>
         <int32 name="o2" description="output 2"/>
         <int32 name="o3" description="output 3"/>
         <int32 name="o4" description="output 4"/>
         <int32 name="o5" description="output 5"/>
         <int32 name="o6" description="output 6"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 3: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_i;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 4: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_i;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 5: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_i;
         outlet_o6 = inlet_d6;
         break;
      case 6: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="demux 7" sha="bca535eb0fb9936fa90891a9fd98b10498d39761">
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <frac32buffer name="i" description="input"/>
         <frac32buffer name="d0" description="default 0"/>
         <frac32buffer name="d1" description="default 1"/>
         <frac32buffer name="d2" description="default 2"/>
         <frac32buffer name="d3" description="default 3"/>
         <frac32buffer name="d4" description="default 4"/>
         <frac32buffer name="d5" description="default 5"/>
         <frac32buffer name="d6" description="default 6"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32buffer name="o0" description="output 0"/>
         <frac32buffer name="o1" description="output 1"/>
         <frac32buffer name="o2" description="output 2"/>
         <frac32buffer name="o3" description="output 3"/>
         <frac32buffer name="o4" description="output 4"/>
         <frac32buffer name="o5" description="output 5"/>
         <frac32buffer name="o6" description="output 6"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.srate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0[buffer_index] = inlet_i[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         outlet_o6[buffer_index] = inlet_d6[buffer_index];
         break;
      case 1: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_i[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         outlet_o6[buffer_index] = inlet_d6[buffer_index];
         break;
      case 2: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_i[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         outlet_o6[buffer_index] = inlet_d6[buffer_index];
         break;
      case 3: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_i[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         outlet_o6[buffer_index] = inlet_d6[buffer_index];
         break;
      case 4: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_i[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         outlet_o6[buffer_index] = inlet_d6[buffer_index];
         break;
      case 5: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_i[buffer_index];
         outlet_o6[buffer_index] = inlet_d6[buffer_index];
         break;
      case 6: 
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         outlet_o6[buffer_index] = inlet_i[buffer_index];
         break;
      default:
         outlet_o0[buffer_index] = inlet_d0[buffer_index];
         outlet_o1[buffer_index] = inlet_d1[buffer_index];
         outlet_o2[buffer_index] = inlet_d2[buffer_index];
         outlet_o3[buffer_index] = inlet_d3[buffer_index];
         outlet_o4[buffer_index] = inlet_d4[buffer_index];
         outlet_o5[buffer_index] = inlet_d5[buffer_index];
         outlet_o6[buffer_index] = inlet_d6[buffer_index];
}
]]></code.srate>
   </obj.normal>
   <obj.normal id="demux 7" sha="2ee611ecff598e3c8f2babc195fa58520f4989ea">
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <bool32 name="i" description="input"/>
         <bool32 name="d0" description="default 0"/>
         <bool32 name="d1" description="default 1"/>
         <bool32 name="d2" description="default 2"/>
         <bool32 name="d3" description="default 3"/>
         <bool32 name="d4" description="default 4"/>
         <bool32 name="d5" description="default 5"/>
         <bool32 name="d6" description="default 6"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <bool32 name="o0" description="output 0"/>
         <bool32 name="o1" description="output 1"/>
         <bool32 name="o2" description="output 2"/>
         <bool32 name="o3" description="output 3"/>
         <bool32 name="o4" description="output 4"/>
         <bool32 name="o5" description="output 5"/>
         <bool32 name="o6" description="output 6"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 3: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_i;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 4: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_i;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
         break;
      case 5: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_i;
         outlet_o6 = inlet_d6;
         break;
      case 6: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         outlet_o6 = inlet_d6;
}
]]></code.krate>
   </obj.normal>
</objdefs>